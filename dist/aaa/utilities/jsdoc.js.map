{"version":3,"sources":["../../../src/aaa/utilities/jsdoc.js"],"names":["assignToDescription","params","every","v","undefined","description","title","format","maxLength","minLength","max","min","minimum","maximum","pattern","getJsdoc","doc","descriptionWithDetails","deprecated","example","normalizeDescription","str","replace"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,MAAI,sBAAcA,MAAd,EAAsBC,KAAtB,CAA4B,UAACC,CAAD;AAAA,WAAO,CAACA,CAAR;AAAA,GAA5B,CAAJ,EAA4C;AAC1C,WAAOC,SAAP;AACD;;AAHkC,MAMjCC,WANiC,GAgB/BJ,MAhB+B,CAMjCI,WANiC;AAAA,MAOjCC,KAPiC,GAgB/BL,MAhB+B,CAOjCK,KAPiC;AAAA,MAQjCC,MARiC,GAgB/BN,MAhB+B,CAQjCM,MARiC;AAAA,MASjCC,SATiC,GAgB/BP,MAhB+B,CASjCO,SATiC;AAAA,MAUjCC,SAViC,GAgB/BR,MAhB+B,CAUjCQ,SAViC;AAAA,MAWjCC,GAXiC,GAgB/BT,MAhB+B,CAWjCS,GAXiC;AAAA,MAYjCC,GAZiC,GAgB/BV,MAhB+B,CAYjCU,GAZiC;AAAA,MAajCC,OAbiC,GAgB/BX,MAhB+B,CAajCW,OAbiC;AAAA,MAcjCC,OAdiC,GAgB/BZ,MAhB+B,CAcjCY,OAdiC;AAAA,MAejCC,OAfiC,GAgB/Bb,MAhB+B,CAejCa,OAfiC;;;AAkBnC,eACER,kBAECA,KAFD,aAII,EALN,KAOED,wBAECA,WAFD,GAGI,EAVN,KAYEE,6BAEWA,MAFX,GAGI,EAfN,KAiBEC,mCAEcA,SAFd,GAGI,EApBN,KAsBEC,mCAEcA,SAFd,GAGI,EAzBN,KA2BEE,uBAEQA,GAFR,GAGI,EA9BN,KAgCED,uBAEQA,GAFR,GAGI,EAnCN,KAqCEE,+BAEYA,OAFZ,GAGI,EAxCN,KA0CEC,2BAEQA,OAFR,GAGI,EA7CN,KA+CEC,+BAEYA,OAFZ,GAGI,EAlDN;AAoDD;;AAED,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAMC,yBAAyBjB,oBAAoBgB,GAApB,CAA/B;;AAEA,SAAOA,IAAIE,UAAJ,IAAkBD,sBAAlB,IAA4CD,IAAIG,OAAhD,cAGDF,mCAEHG,qBAAqBH,sBAArB,CAFG,GAGI,EANH,KAQDD,IAAIE,UAAJ,0BAESE,qBAAqBJ,IAAIE,UAAzB,KAAwC,EAFjD,IAGI,EAXH,KAaDF,IAAIG,OAAJ,6BAGDH,IAAIG,OAHH,GAII,EAjBH,gBAqBH,EArBJ;AAsBD;;AAED,SAASC,oBAAT,GAAwC;AAAA,MAAVC,GAAU,uEAAJ,EAAI;;AACtC,SAAOA,IAAIC,OAAJ,CAAY,OAAZ,EAAqB,MAArB,CAAP;AACD;;QAEQP,Q,GAAAA,Q","file":"jsdoc.js","sourcesContent":["function assignToDescription(params) {\n  if (Object.values(params).every((v) => !v)) {\n    return undefined;\n  }\n\n  const {\n    description,\n    title,\n    format,\n    maxLength,\n    minLength,\n    max,\n    min,\n    minimum,\n    maximum,\n    pattern,\n  } = params;\n\n  return `${\n    title\n      ? `\n * ${title}\n * `\n      : \"\"\n  }${\n    description\n      ? `\n * ${description}`\n      : \"\"\n  }${\n    format\n      ? `\n * - Format: ${format}`\n      : \"\"\n  }${\n    maxLength\n      ? `\n * - maxLength: ${maxLength}`\n      : \"\"\n  }${\n    minLength\n      ? `\n * - minLength: ${minLength}`\n      : \"\"\n  }${\n    min\n      ? `\n * - min: ${min}`\n      : \"\"\n  }${\n    max\n      ? `\n * - max: ${max}`\n      : \"\"\n  }${\n    minimum\n      ? `\n * - minimum: ${minimum}`\n      : \"\"\n  }${\n    maximum\n      ? `\n * - max: ${maximum}`\n      : \"\"\n  }${\n    pattern\n      ? `\n * - pattern: ${pattern}`\n      : \"\"\n  }`;\n}\n\nfunction getJsdoc(doc) {\n  const descriptionWithDetails = assignToDescription(doc);\n\n  return doc.deprecated || descriptionWithDetails || doc.example\n    ? `\n/**${\n        descriptionWithDetails\n          ? `\n * ${normalizeDescription(descriptionWithDetails)}`\n          : \"\"\n      }${\n        doc.deprecated\n          ? `\n * @deprecated ${normalizeDescription(doc.deprecated) || \"\"}`\n          : \"\"\n      }${\n        doc.example\n          ? `\n * @example \n *   ${doc.example}`\n          : \"\"\n      }\n */\n`\n    : \"\";\n}\n\nfunction normalizeDescription(str = \"\") {\n  return str.replace(/\\*\\//g, \"*\\\\/\");\n}\n\nexport { getJsdoc };\n"]}