{"version":3,"sources":["../../src/aaa/strings.js"],"names":["rootPath","process","cwd","HTTP_REQUEST","path","resolve","__dirname","toString","CONFIG","FILE_HOOKS_CONFIG","AUTOGENERATED_COMMENT","SERVICE_BEGINNING","SERVICE_NEEDED_FUNCTIONS","getHooksImports","hasInfinity","getHooksFunctions","DEPRECATED_WARM_MESSAGE"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,WAAWC,QAAQC,GAAR,EAAjB;;AAEA,IAAMC,eAAe,sBACnBC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,yBAAxB,CADmB,EAEnBC,QAFmB,EAArB;;AAIA,IAAMC,SAAS,sBACbJ,eAAKC,OAAL,CAAaC,SAAb,EAAwB,wBAAxB,CADa,EAEbC,QAFa,EAAf;;AAIA,IAAME,oBAAoB,sBACxBL,eAAKC,OAAL,CAAaC,SAAb,EAAwB,6BAAxB,CADwB,EAExBC,QAFwB,EAA1B;;AAIA,IAAMG,qIAAN;;AAQA,IAAMC,oBAAuBD,qBAAvB,sKAAN;AAKA,IAAME,skCAAN;;AAyCA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,SAAwBJ,qBAAxB,WACtBI,qDAAmD,EAD7B,+IASpBA,kEAGI,EAZgB,4HAmBtBA,kGAEI,EArBkB;AAAA,CAAxB;AAwBA,IAAMC,oBAAoB,SAApBA,iBAAoB;AAAA,MAAGD,WAAH,SAAGA,WAAH;AAAA,SACxBA,8lBA8BI,EA/BoB;AAAA,CAA1B;;AAiCA,IAAME,0BACJ,wEADF;;QAIEN,qB,GAAAA,qB;QACAE,wB,GAAAA,wB;QACAT,Y,GAAAA,Y;QACAQ,iB,GAAAA,iB;QACAI,iB,GAAAA,iB;QACAF,e,GAAAA,e;QACAL,M,GAAAA,M;QACAQ,uB,GAAAA,uB;QACAP,iB,GAAAA,iB","file":"strings.js","sourcesContent":["import { readFileSync } from \"fs\";\nimport path from \"path\";\n\nconst rootPath = process.cwd();\n\nconst HTTP_REQUEST = readFileSync(\n  path.resolve(__dirname, \"../../files/request.tsf\")\n).toString();\n\nconst CONFIG = readFileSync(\n  path.resolve(__dirname, \"../../files/config.tsf\")\n).toString();\n\nconst FILE_HOOKS_CONFIG = readFileSync(\n  path.resolve(__dirname, \"../../files/hooksConfig.tsf\")\n).toString();\n\nconst AUTOGENERATED_COMMENT = `\n/**\n* AUTO_GENERATED Do not change this file directly, use config.ts file instead\n*\n* @version 5\n*/\n`;\n\nconst SERVICE_BEGINNING = `${AUTOGENERATED_COMMENT}\nimport { AxiosRequestConfig } from \"axios\";\nimport { ResponseData } from \"../interface/public\";\nimport { request, objectToString } from \"../request\";\n`;\nconst SERVICE_NEEDED_FUNCTIONS = `\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const __DEV__ = process.env.NODE_ENV !== \"production\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction overrideConfig(\n  config?: AxiosRequestConfig,\n  configOverride?: AxiosRequestConfig,\n): AxiosRequestConfig {\n  return {\n    ...config,\n    ...configOverride,\n    headers: {\n      ...config?.headers,\n      ...configOverride?.headers,\n    },\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function template(path: string, obj: { [x: string]: any } = {}) {\n    Object.keys(obj).forEach((key) => {\n      const re = new RegExp(\\`{\\${key}}\\`, \"i\");\n      path = path.replace(re, obj[key]);\n    });\n\n    return path;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// function objToForm(requestBody: object) {\n//   const formData = new FormData();\n\n//   Object.entries(requestBody).forEach(([key, value]) => {\n//     value && formData.append(key, value);\n//   });\n\n//   return formData;\n// }\n`;\n\nconst getHooksImports = ({ hasInfinity }) => `${AUTOGENERATED_COMMENT}\n${hasInfinity ? `import { useMemo } from \"react\";` : \"\"}\nimport { AxiosRequestConfig } from \"axios\";\nimport {\n  UseQueryOptions,\n  useQuery,\n  useMutation,\n  UseMutationOptions,\n  ${\n    hasInfinity\n      ? `  useInfiniteQuery,\n  UseInfiniteQueryOptions,`\n      : \"\"\n  }\n  QueryClient,\n  QueryKey,\n} from \"react-query\";\nimport { RequestError, ResponseData } from \"./config\";\n${\n  hasInfinity\n    ? `import { paginationFlattenData, getPageSize, getTotal } from \"./hooksConfig\";`\n    : \"\"\n}\n`;\nconst getHooksFunctions = ({ hasInfinity }) =>\n  hasInfinity\n    ? `\nconst useHasMore = (\n  pages: Array<ResponseData<any>> | undefined,\n  list: any,\n  queryParams: any,\n) =>\n  useMemo(() => {\n    if (!pages || (pages && pages.length < 1)) {\n      return false;\n    }\n\n    const total = getTotal(pages);\n\n    if (total !== undefined) {\n      if (list && list.length < total) {\n        return true;\n      }\n      return false;\n    }\n    if (\n      paginationFlattenData([pages[pages.length - 1]])?.length === getPageSize(queryParams as any)\n    ) {\n      return true;\n    }\n\n    return false;\n  }, [pages, list, queryParams]);\n\n`\n    : \"\";\n\nconst DEPRECATED_WARM_MESSAGE =\n  \"This endpoint deprecated and will be remove. Please use an alternative\";\n\nexport {\n  AUTOGENERATED_COMMENT,\n  SERVICE_NEEDED_FUNCTIONS,\n  HTTP_REQUEST,\n  SERVICE_BEGINNING,\n  getHooksFunctions,\n  getHooksImports,\n  CONFIG,\n  DEPRECATED_WARM_MESSAGE,\n  FILE_HOOKS_CONFIG,\n};\n"]}