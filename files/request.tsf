import axios, { AxiosError, AxiosResponse } from "axios";
import { parse, stringify } from "qs";
import { APP_SERVER } from "@/env";

const request = axios.create({
  baseURL: APP_SERVER,
});

request.interceptors.request.use(
  (config) => {
    if (config.method === "get" && config.url) {
      const urlSplit = config.url.split("?");
      const params = parse(urlSplit[1]);
      Object.keys(params).forEach((key) => {
        if (
          params[key] === undefined ||
          params[key] === "undefined" ||
          params[key] === null ||
          params[key] === "null"
        )
          delete params[key];
      });
      // eslint-disable-next-line no-param-reassign
      config.url = `${urlSplit[0]}?${stringify(params)}`;
    }

    return config;
  },
  (error) => {
    return Promise.reject(error);
  },
);
// 添加响应拦截器
request.interceptors.response.use(
  (response: AxiosResponse) => response,
  (error: AxiosError) => {
    if (error.response) {
      const { data } = error.response;
      if (data && typeof data === "object" && data.code && data.message) {
        return error.response;
      }
    }
    return error;
  },
);
export { request };
